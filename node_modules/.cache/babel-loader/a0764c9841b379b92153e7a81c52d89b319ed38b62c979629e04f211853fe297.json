{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Documents\\\\GitHub\\\\Project4ver1\\\\find_ym\\\\src\\\\Pages\\\\Personality.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\nimport Aestheticism from \"./Aethesticism\";\nimport SelectComponent from \"./SelectComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Personality = () => {\n  _s();\n  const initialOptions = [{\n    key: 1,\n    value: 'Communication'\n  }, {\n    key: 2,\n    value: 'Empathy'\n  }, {\n    key: 3,\n    value: 'Respect'\n  }, {\n    key: 4,\n    value: 'Trustworthiness'\n  }, {\n    key: 5,\n    value: 'SharedValues'\n  }, {\n    key: 6,\n    value: 'Flexibility'\n  }, {\n    key: 7,\n    value: 'Humor'\n  }, {\n    key: 8,\n    value: 'Interests'\n  }, {\n    key: 9,\n    value: 'Independence'\n  }, {\n    key: 10,\n    value: 'ConflictResolution'\n  }, {\n    key: 11,\n    value: 'AffectionIntimacy'\n  }];\n  const navigate = useNavigate();\n  const [input, setInput] = useState({\n    title: ''\n  });\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [availableOptions, setAvailableOptions] = useState(initialOptions);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInput(prevInput => ({\n      ...prevInput,\n      [name]: value\n    }));\n  }\n  function handleSelectChange(selectedOption) {\n    // Check if the option is already selected\n    if (!selectedOptions.includes(selectedOption)) {\n      setSelectedOptions([...selectedOptions, selectedOption]);\n\n      // Remove the selected option from the available options list\n      setAvailableOptions(prevOptions => prevOptions.filter(opt => opt.key !== selectedOption));\n    }\n  }\n  function handleRemoveOption(selectedOption) {\n    // Remove the selected option from the selected options list\n    setSelectedOptions(prevOptions => prevOptions.filter(opt => opt !== selectedOption));\n\n    // Add the selected option back to the available options list\n    const removedOption = selectedOptions.find(opt => opt === selectedOption);\n    if (removedOption) {\n      setAvailableOptions(prevOptions => [...prevOptions, removedOption]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/pa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pa\",\n        element: /*#__PURE__*/_jsxDEV(Aestheticism, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Personality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            name: \"title\",\n            value: input.title,\n            autoComplete: \"off\",\n            className: \"form-control\",\n            placeholder: \"Your Gmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), [1, 2, 3, 4, 5].map(index => /*#__PURE__*/_jsxDEV(SelectComponent, {\n          options: availableOptions,\n          placeholder: \"Type to search\",\n          onChange: item => handleSelectChange(item),\n          selectedOptions: selectedOptions,\n          onRemove: item => handleRemoveOption(item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-2\",\n        onClick: () => navigate(\"/pa\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn2_text\",\n          children: \"Next One !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Personality, \"qvqcGFDKesBJpvR5eObwRuUUid4=\", false, function () {\n  return [useNavigate];\n});\n_c = Personality;\nexport default Personality;\nvar _c;\n$RefreshReg$(_c, \"Personality\");","map":{"version":3,"names":["React","useState","Link","Routes","Route","useNavigate","Aestheticism","SelectComponent","jsxDEV","_jsxDEV","Personality","_s","initialOptions","key","value","navigate","input","setInput","title","selectedOptions","setSelectedOptions","availableOptions","setAvailableOptions","handleChange","event","name","target","prevInput","handleSelectChange","selectedOption","includes","prevOptions","filter","opt","handleRemoveOption","removedOption","find","Fragment","children","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","className","onChange","autoComplete","placeholder","map","index","options","item","onRemove","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nguye/Documents/GitHub/Project4ver1/find_ym/src/Pages/Personality.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Aestheticism from \"./Aethesticism\";\r\nimport SelectComponent from \"./SelectComponent\";\r\n\r\nconst Personality = () => {\r\n  const initialOptions = [\r\n    { key: 1, value: 'Communication' },\r\n    { key: 2, value: 'Empathy' },\r\n    { key: 3, value: 'Respect' },\r\n    { key: 4, value: 'Trustworthiness' },\r\n    { key: 5, value: 'SharedValues' },\r\n    { key: 6, value: 'Flexibility' },\r\n    { key: 7, value: 'Humor' },\r\n    { key: 8, value: 'Interests' },\r\n    { key: 9, value: 'Independence' },\r\n    { key: 10, value: 'ConflictResolution' },\r\n    { key: 11, value: 'AffectionIntimacy' },\r\n  ];\r\n\r\n  const navigate = useNavigate();\r\n  const [input, setInput] = useState({\r\n    title: '',\r\n  });\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [availableOptions, setAvailableOptions] = useState(initialOptions);\r\n\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setInput((prevInput) => ({\r\n      ...prevInput,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  function handleSelectChange(selectedOption) {\r\n    // Check if the option is already selected\r\n    if (!selectedOptions.includes(selectedOption)) {\r\n      setSelectedOptions([...selectedOptions, selectedOption]);\r\n\r\n      // Remove the selected option from the available options list\r\n      setAvailableOptions((prevOptions) => prevOptions.filter(opt => opt.key !== selectedOption));\r\n    }\r\n  }\r\n\r\n  function handleRemoveOption(selectedOption) {\r\n    // Remove the selected option from the selected options list\r\n    setSelectedOptions((prevOptions) => prevOptions.filter(opt => opt !== selectedOption));\r\n\r\n    // Add the selected option back to the available options list\r\n    const removedOption = selectedOptions.find(opt => opt === selectedOption);\r\n    if (removedOption) {\r\n      setAvailableOptions((prevOptions) => [...prevOptions, removedOption]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Link to='/pa'></Link>\r\n      <Routes>\r\n        <Route path=\"/pa\" element={<Aestheticism />} />\r\n      </Routes>\r\n      <div className='main-container'>\r\n        <span className='text'>Personality</span>\r\n\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange}\r\n              name=\"title\"\r\n              value={input.title}\r\n              autoComplete=\"off\"\r\n              className=\"form-control\"\r\n              placeholder=\"Your Gmail\"\r\n            ></input>\r\n          </div>\r\n\r\n          {[1, 2, 3, 4, 5].map((index) => (\r\n            <SelectComponent\r\n              key={index}\r\n              options={availableOptions}\r\n              placeholder={\"Type to search\"}\r\n              onChange={(item) => handleSelectChange(item)}\r\n              selectedOptions={selectedOptions}\r\n              onRemove={(item) => handleRemoveOption(item)}\r\n            />\r\n          ))}\r\n        </form>\r\n\r\n        <button\r\n          className=\"btn-2\"\r\n          onClick={() => navigate(\"/pa\")}\r\n        >\r\n          <span className=\"btn2_text\">Next One !</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Personality;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}